from config import bot
import subscriptions
import dbconnection as db
import keyboards
from contexts import get_user_context, get_input_timezone_context, UserContext, InputTimeZoneContext
from informer import isend
from telebot.types import Message, Location, User
from decorators import cancel_on_message_confusion
from user_timezone import get_timezone
import re

def set_name(message:Message):
    isend(username=message.from_user.username, chat_id=message.chat.id, func_name='set_name', inputted_value=message.text)
    if name := message.text:
        if name not in ['/start', 'üçΩÔ∏è–ü–∏—Ç–∞–Ω–∏–µ', 'üí™–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', 'üí¨–ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'üë§–ü—Ä–æ—Ñ–∏–ª—å', 'üî¢–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã']:
            user_context:UserContext = get_user_context(message)
            db.add_user(user_context.username, message.chat.id, name)
            bot.send_message(message.chat.id, f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, <b>{name}</b>', parse_mode='HTML')
            process_location(message)
            #subscriptions.check_subscription_status(message)
        else:
            send_error_message(message)
    else:
        send_error_message(message)

def print_user_timezone(message:Message):
    user_id = db.get_user_id(message.chat.id)
    if user_timezone := db.get_user_timezone(user_id):
        edit = True
        user_timezone_text = f'–í–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {user_timezone}'
    else:
        edit = False
        user_timezone_text = '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
    bot.send_message(message.chat.id, user_timezone_text, reply_markup=keyboards.user_timezone_keyboard(edit))

def send_processing_timezone_message(message:Message):
    user_id = db.get_user_id(message.chat.id)
    msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –∏–ª–∏ —É–∫–∞–∂–∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ UTC (–Ω–∞–ø—Ä–∏–º–µ—Ä: +07:00), —Ç–∞–∫ —è —Å–º–æ–≥—É –≤—ã–≤–æ–¥–∏—Ç—å –∑–∞–ø–∏—Å–∏ –∏–∑ –¥–Ω–µ–≤–Ω–∏–∫–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –º–µ—Å—Ç–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º:')
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(msg, location_handler, user_id)

def process_location(message:Message):
    user_id = db.get_user_id(message.chat.id)
    if not db.get_user_timezone(user_id):
        send_processing_timezone_message(message)
    else:
        bot.send_message('–û–∫–µ–π, –ø—Ä–æ–¥–æ–ª–∂–∏–º', reply_markup=keyboards.main_keyboard())

@cancel_on_message_confusion
def location_handler(message:Message, user_id):
    input_timezone_context:InputTimeZoneContext = get_input_timezone_context(message)
    if message.content_type == 'location':
        location:Location = message.location
        latitude = location.latitude
        longitude = location.longitude
        timezone = get_timezone(latitude, longitude)
        input_timezone_context.timezone = timezone
        send_inputted_timezone(message, timezone)
        return
    elif message.content_type == 'text':
        timezone = message.text
        pattern = r'^[+-]\d{2}:\d{2}$'
        if re.match(pattern, timezone) is not None:
            input_timezone_context.timezone = timezone
            save_timezone(message)
            return
        else:
            msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
    else:
        msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:')

    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(msg, location_handler, user_id)

def send_inputted_timezone(message:Message, timezone):
    bot.send_message(message.chat.id, f'–í–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (UTC): {timezone}. –í–µ—Ä–Ω–æ?', reply_markup=keyboards.check_timezone_keyboard())

def send_timezone_set(message:Message):
    bot.send_message(message.chat.id, '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ', reply_markup=keyboards.main_keyboard())

def save_timezone(message:Message):
    user_id = db.get_user_id(message.chat.id)
    input_timezone_context:InputTimeZoneContext = get_input_timezone_context(message)
    if timezone := input_timezone_context.timezone:
        db.set_user_timezone(user_id, timezone)
        send_timezone_set(message)
    else:
        msg = bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ó–∞–Ω–æ–≤–æ –≤–≤–µ–¥–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:')
        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(msg, location_handler, user_id)

def send_error_message(message:Message):
    msg = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:')
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(msg, set_name)