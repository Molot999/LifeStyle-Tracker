from config import bot
import dbconnection as db
import keyboards
from datetime import timedelta, datetime
from contexts import get_user_context
import yoomoney_api
import random
from user_body_profiles import send_user_body_profile_filling_request
from subscriptions_utils import AvailableSubscription

def check_subscription_status(message):
    if user_subscription_info := db.get_user_subscription_info(message.chat.id):
        _, end_date = user_subscription_info
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        current_time = datetime.now()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –º–µ–Ω—å—à–µ —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        if current_time < end_date:
            # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏
            delta:timedelta = end_date - current_time
            send_subscription_info(message, delta.days)
        else:
            offer_subscription(message)
    else:
        offer_subscription(message)

def offer_subscription(message):
    name = db.get_name(message.chat.id)
    available_subscriptions = [AvailableSubscription(*available_subscription) for available_subscription in db.get_available_subscriptions()]
    bot.send_message(message.chat.id,
                    f'<b>{name}</b>, —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É?',
                    reply_markup=keyboards.offer_subscription(available_subscriptions),
                    parse_mode='HTML')

def send_subscription_info(message, days_left):
    bot.send_message(message.chat.id, f'–û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –ø–æ–¥–ø–∏—Å–∫–∏: <b>{days_left}</b> –¥.', parse_mode='HTML')

def buy_subscription(message, period, price):
    username = get_user_context(message).username
    label = f"{username}-{random.randint(1111111111, 9999999999)}"
    payment_url = yoomoney_api.generate_payment_url(price, label)
    db.add_payment(label, payment_url, period)
    bot.send_message(message.chat.id,
f"""
–ü–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏: <b>{period} –¥–Ω–µ–π</b>
–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: <b>{price} —Ä—É–±–ª–µ–π</b>

–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:
üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
üü£ –ö–æ—à–µ–ª–µ–∫ –ÆMoney
""",
parse_mode='HTML',
reply_markup=keyboards.pay_keyboard(payment_url, label))
    
def apply_test_period(message):
    user_test_period_status = db.get_user_test_period_status(message.chat.id)
    print('user_test_period_status', user_test_period_status)
    if user_test_period_status is False:
        db.update_user_test_period_status(message.chat.id, True)
        db.add_user_subscription(message.chat.id, period_days=7) # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Ç–∞–∫–æ–≥–æ –Ω–µ—Ç
        bot.send_message(message.chat.id, '–í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ 7 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ üëç')
        
    else:
        bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ —Ä–∞–Ω–Ω–µ–µ')